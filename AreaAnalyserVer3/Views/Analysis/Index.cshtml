@model  AreaAnalyserVer3.ViewModels.Analysis

@{
    ViewBag.Title = "Index";
}

@section Amcharts {
    @Scripts.Render("~/amcharts/amcharts.js")
    @Scripts.Render("~/amcharts/serial.js")
    @Scripts.Render("~/amcharts/pie.js")
    @Scripts.Render("~/amcharts/plugins/dataloader/dataloader.min.js")
    @Scripts.Render("~/Scripts/historyChart.js")

    @*@Scripts.Render("~/Scripts/jquery.tablesorter.min.js")
        @Scripts.Render("~/Scripts/jquery.tablesorter.pager.js")*@

    @Scripts.Render("~/Scripts/tablesorter/jquery.tablesorter.combined.min.js")
    @Scripts.Render("~/Scripts/pager/jquery.tablesorter.pager.js")
    @Scripts.Render("~/Content/theme.green.css")
    @*<link href="~/Scripts/pager/jquery.tablesorter.pager.css" rel="stylesheet" />*@


    <script type="text/javascript">
        $(function () {
            $("table")
                .tablesorter({ widthFixed: true, widgets: ['zebra'] })
                .tablesorterPager({ container: $("#pager") });
        });
    </script>

}


<ul class="nav nav-pills nav-justified">
    <li class="active"><a data-toggle="pill" href="#home">Overview</a></li>
    <li><a data-toggle="pill" href="#Property">Property</a></li>
    <li><a data-toggle="pill" href="#Crime">Crime</a></li>
</ul>

@*<div class="container">
        @using (Html.BeginForm())
                {
            <div class="col-md-4">@Html.DropDownList("County", (SelectList)ViewBag.County, "Choose county...", new { @class = "form-control" })</div>
                    <div class="col-md-4">@Html.DropDownList("TownID", (SelectList)ViewBag.TownID, new { @class = "form-control" })</div>
                    <br />
                    <input type="submit" value="Arealyse" />
        }
    </div>*@



<div class="tab-content">

    @*@if (IsPost)
        {*@
    <div id="home" class="tab-pane fade in active">


        <h1>@Html.DisplayFor(m => m.Town.Name)</h1>
        @*<input id="address" type="text" value="@Html.DisplayFor(m => m.Address)" hidden>*@
        <input type="text" id="latitude" value=@Html.Raw(Model.Town.GeoLocation.Latitude) hidden />
        <input type="text" id="longitude" value=@Html.Raw(Model.Town.GeoLocation.Longitude) hidden />
        <input type="text" id="townId" value=@Html.Raw(Model.Town.TownId) hidden />
        @*@Html.ActionLink("Back to search", "search", "PriceRegister", null, null)*@


        @*<div id="map_canvas" style="width: 640px; height: 480px;"></div>*@

        @*@foreach (var image in Model.WikiImages)
            {
                <img src='@image.Url' height='50' width='50' style="float: left; margin: 5px;" />
                <br />
            }*@

        @foreach (var item in Model.WikiResults)
            {
            <h3><a href="@string.Format("https://en.wikipedia.org/wiki/{0}", @item.PageTitle)">@item.PageTitle</a></h3>

            <p>@item.PageContent</p>
        }


    </div>

    <div id="Property" class="tab-pane fade">
        <div class="container-fluid">
            <div id="chartdiv" style="width: 100%; height: 600px"></div>
        </div>
        <div class="container">
            <h2>Stats</h2>
            <div class="container-fluid">
                <br>
                <div id="myCarousel" class="carousel slide" data-ride="carousel">
                    <!-- Indicators -->
                    <ol class="carousel-indicators">
                        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                        <li data-target="#myCarousel" data-slide-to="1"></li>
                        <li data-target="#myCarousel" data-slide-to="2"></li>

                    </ol>

                    <!-- Wrapper for slides -->
                    <div class="carousel-inner" role="listbox">

                        <div class="item active">
                            <h2>@Html.DisplayNameFor(m => m.AveragePriceLast6mths)</h2>
                            <h3>@Html.DisplayFor(m => m.AveragePriceLast6mths)</h3>
                        </div>

                        <div class="item ">
                            <h2>@Html.DisplayNameFor(m => m.NumSoldinLast6mths)</h2>
                            <h3>@Html.DisplayFor(m => m.NumSoldinLast6mths)</h3>
                        </div>

                        <div class="item">
                            <h2>@Html.DisplayNameFor(m => m.PercentDiff)</h2>
                            <h3>@Html.DisplayFor(m => m.PercentDiff)</h3>
                        </div>

                    </div>

                    <!-- Left and right controls -->
                    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>

        </div>

        <div class="container">
            <table id="pprTable" class="table table-striped tablesorter">
                @if (Model.HousesInArea != null)
                {
                    <thead>
                        <tr>
                            <th>
                                @Html.Display("Date Sold")
                            </th>
                            <th>
                                @Html.Display("Address")
                            </th>
                            <th>
                                @Html.Display("Price")
                            </th>
                        </tr>
                    </thead>
                    <tbody>

                        @{
                            foreach (var item in Model.HousesInArea)
                            {

                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DateOfSale)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Address)
                                    </td>
                                    <td>
                                        € @Html.DisplayFor(modelItem => item.Price)
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                            }
            </table>
            <div id="pager" class="pager">
                <form>

                    <img src="~/Images/icons/first.png" class="first" />
                    <img src="~/Images/icons/prev.png" class="prev" />
                    <input type="text" class="pagedisplay" />
                    <img src="~/Images/icons/next.png" class="next" />
                    <img src="~/Images/icons/last.png" class="last" />
                    <select class="pagesize">
                        <option selected="selected" value="5">5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="30">30</option>
                        <option value="40">40</option>
                    </select>
                </form>
            </div>
        </div>
    </div>



    <div id="Crime" class="tab-pane fade">

        <h4>Crime Stats</h4>
        <h5>Nearest station : <span>@Html.DisplayFor(m => m.Garda.Address)</span></h5>

        <div id="chartcrime" style="width: 100%; height: 600px; "></div>

        <table class="table table-striped">
            @if (Model.Crimes != null)
            {
                <tr>
                    <th class="col-md-2">
                        @Html.DisplayName("Attempted murder/assaults")
                    </th>
                    <th class="col-md-2">
                        @Html.DisplayName("Burglaries")
                    </th>
                    <th class="col-md-2">
                        @Html.DisplayName("Damage")
                    </th>
                    <th class="col-md-2">
                        @Html.DisplayName("Dangerous acts")
                    </th>
                    <th class="col-md-2">
                        @Html.DisplayName("Drug offences")
                    </th>
                    <th class="col-md-2">
                        @Html.DisplayName("Year")
                    </th>
                </tr>

                foreach (var item in Model.Crimes)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.NumAttemptedMurderAssault)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NumBurglary)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NumDamage)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NumDangerousActs)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NumDrugs)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Year)
                        </td>
                    </tr>
                }
            }
        </table>

    </div>



    @*}*@

</div>








@section map {
    <script>
        var name = '@Model.Town.Name';
        $
        $(document).ready(function () {
            crimeChart();
            $("h1").text(name);
        });
    </script>

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBrhbqEZBoAebuzCTde9t8agomyfnRcM9s&region=IE"></script>
    @*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBrhbqEZBoAebuzCTde9t8agomyfnRcM9s&callback=initMap"></script>*@
    <script>
        var chart1 = AmCharts.makeChart("chartdiv",
            {
                "type": "serial",
                "categoryField": "ds",
                "dataDateFormat": "YYYY-MM",
                "backgroundColor": "#BBBBBB",
                "borderColor": "#CC0000",
                "percentPrecision": 0,
                "theme": "default",
                "categoryAxis": {
                    "minPeriod": "MM",
                    "parseDates": true
                },
                "valueScrollbar": {
                    "enabled": true,
                    "backgroundAlpha": 0,
                    "backgroundColor": "#DA2222",
                    "offset": 12,
                    "oppositeAxis": false,
                    "scrollbarHeight": 10
                },
                "chartCursor": {
                    "enabled": true,
                    "categoryBalloonDateFormat": "MMM YYYY",
                    "pan": true,
                    "valueBalloonsEnabled": false,
                    "valueLineAlpha": 0
                },
                "chartScrollbar": {
                    "enabled": true
                },
                "trendLines": [],
                "graphs": [
                    {
                        "balloonText": "€ [[value]]",
                        "bullet": "round",
                        "bulletAlpha": 0.99,
                        "bulletBorderAlpha": 0.65,
                        "bulletBorderColor": "#FF0000",
                        "bulletColor": "#FFFFFF",
                        "id": "AmGraph-2",
                        "lineColor": "#1A350A",
                        "lineThickness": 2,
                        "title": "Price",
                        "type": "smoothedLine",
                        "valueField": "name"
                    }
                ],
                "guides": [],
                "valueAxes": [
                    {
                        "id": "ValueAxis-1",
                        "autoRotateAngle": 1.8,
                        "fillAlpha": 0.03,
                        "gridAlpha": 0.21,
                        "gridColor": "#1A350A",
                        "gridCount": 0,
                        "offset": 50,
                        "title": "Avg. Price  €"
                    }
                ],
                "allLabels": [],
                "balloon": {
                    "animationDuration": 1.02,
                    "fadeOutDuration": 0.52,
                    "fixedPosition": false,
                    "offsetX": 3,
                    "offsetY": 12
                },
                "legend": {
                    "enabled": true,
                    "useGraphSettings": true
                },
                "titles": [
                    {
                        "color": "#2F4F1C",
                        "id": "Title-1",
                        "size": 15,
                        "text": "Property Prices"
                    }
                ],
                "dataLoader": {
                    "url": myUrl, // controller function call
                    "format": "json",
                }
            });

        chart.addListener("rendered", zoomChart);

        zoomChart();

        function zoomChart() {
            chart.zoomToIndexes(chart.dataProvider.length - 40, chart.dataProvider.length - 1);
        }


    </script>
}
